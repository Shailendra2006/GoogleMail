#%RAML 1.0
title: GMail
version: v1
baseUri: https://www.googleapis.com/gmail/{version}/users
mediaType: application/json
securitySchemes:
  - oauth_2_0: !include securitySchemes/oauth_2_0.raml
uses:
  types: !include types.raml
schemas:
  - messageFull: types.Message
resourceTypes:
  - base: !include resourceTypes/base.raml
traits:
  - formatted: !include traits/formatted.raml
  - query: !include traits/query.raml
  - paginated: !include traits/paginated.raml
  - uploadMetadata: !include traits/uploadMetadata.raml
  - commonParams: !include traits/commonParams.raml
securedBy: [ oauth_2_0 ]
/{userId}:
  /messages:
    get: (query.includeSpamTrash?:boolean, query.labelIds?:string, query.q?:string, query.maxResults?:integer, query.pageToken?:string) =>{200:types.Messages}
    post: (query.uploadType:string, body:types.MessageCreate) =>{200:types.Message}
    /send:
      type: base
      post: (query.uploadType:string, body:types.MessageCreate) =>{200:types.Message}
    /import:
      type: base
      post: (query.uploadType:string, body:types.MessageCreate) =>{200:types.Message}
    /{messageId}:
      get: (query.format?:string) =>{200:types.Message}
      delete:
        description: "Immediately and permanently deletes the specified message. This operation cannot be undone. Prefer 'messages.trash' instead."
      /modify:
        type: base
        post: (body:types.ModifyLabels) =>{200:types.Message}
      /untrash:
        type: base
        post: () =>{200:types.Message}
      /trash:
        type: base
        post: () =>{200:types.Message}
      /attachments/{id}:
        type: base
        get: () =>{200:types.Attachment}
  /drafts:
    type: base
    get: (query.maxResults?:integer, query.pageToken?:string) =>{200:types.Drafts}
    post: (query.uploadType:string, body:types.DraftCreate) =>{200:types.Draft}
    /{id}:
      type: base
      get: (query.format?:string) =>{200:types.DraftFull}
      delete:
        description: Immediately and permanently deletes the specified draft. Does not simply trash it.
      put: (query.uploadType:string, body:types.DraftCreate) =>{200:types.Draft}
    /send:
      type: base
      post: (query.uploadType:string, body:types.DraftSend) =>{200:types.Drafts}
  /history:
    type: base
    get: (query.maxResults?:integer, query.pageToken?:string) =>{200:types.History}
  /labels:
    type: base
    get: () =>{200:types.Labels}
    post: (body:types.LabelCreate) =>{200:types.Label}
    /{id}:
      type: base
      get: () =>{200:types.Label}
      delete:
        description: Immediately and permanently deletes the specified label and removes it from any messages and threads that it is applied to.
      patch: (body:types.LabelCreate) =>{200:types.Label}
      put: (body:types.LabelCreate) =>{200:types.Label}
  /threads:
    get: (query.includeSpamTrash?:boolean, query.labelIds?:string, query.q?:string, query.maxResults?:integer, query.pageToken?:string) =>{200:types.Threads}
    /{id}:
      get: ()=>{200:types.Thread}
      delete:
        description: "Immediately and permanently deletes the specified thread. This operation cannot be undone. Prefer 'threads.trash' instead."
      /modify:
        type: base
        post: (body:types.ModifyLabels)=>{200:types.Thread}
      /trash:
        type: base
        post: ()=>{200:types.Thread}
      /untrash:
        type: base
        post: ()=>{200:types.Thread}
  /profile:
    get: ()=>{200:types.ProfileResponse}
documentation:
  - title: Headline
    content: !include docs/api/headline.md
